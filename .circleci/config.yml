# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:tools-deps-1.9.0.394-node

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "deps.edn" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: sudo apt-get install -y make
      - run: make test

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}

      - store_artifacts:
          path: test-results

  upload_codecov:
    description: |
      Upload coverage results to Codecov.io.

      Make sure you run Kaocha with --plugin cloverage --codecov. For non-free
      repos make sure to set your CODECOV_TOKEN.
    parameters:
      conf:
        description: Used to specify the location of the .codecov.yml config file
        type: string
        default: ""
      file:
        description: Path to the code coverage data file to upload.
        type: string
        default: "target/coverage/codecov.json"
      flags:
        description: Flag the upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
        type: string
        default: ""
      token:
        description: Set the private repository token (defaults to environment variable $CODECOV_TOKEN)
        type: string
        default: ""
      upload_name:
        description: Custom defined name of the upload. Visible in Codecov UI
        type: string
        default: ${CIRCLE_BUILD_NUM}
    steps:
      - run:
          name: Upload Coverage Results to Codecov.io
          command: |
            for COVERAGE_FILE in `ls << parameters.file >>`; do
            echo Uploading $COVERAGE_FILE to Codecov.io
            {
              if [[ ! -z "<< parameters.flags >>" ]]; then
                echo -F << parameters.flags >>
              fi

              if [[ ! -z "<< parameters.conf >>" ]]; then
                echo -y << parameters.token >>
              elif [[ ! -z "${CODECOV_TOKEN}" ]]; then
                echo -y ${CODECOV_TOKEN}
              fi

              if [[ ! -z "<< parameters.token >>" ]]; then
                echo -t << parameters.token >>
              fi
            } | xargs bash <(curl -s https://codecov.io/bash) -n << parameters.upload_name >> -f $COVERAGE_FILE
            done
